// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stocks.Infrastructure;

#nullable disable

namespace Stocks.Infrastructure.Migrations
{
    [DbContext(typeof(StockDBContext))]
    partial class StockDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Stocks.Domain.Entities.Broker", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Broker");
                });

            modelBuilder.Entity("Stocks.Domain.Entities.BrokerStockInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AvailableStocks")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("BrokerId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<decimal>("TotalStocks")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("BrokerId", "Ticker")
                        .IsUnique();

                    b.ToTable("BrokerStockInfos");
                });

            modelBuilder.Entity("Stocks.Domain.Entities.StockStats", b =>
                {
                    b.Property<string>("Ticker")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<decimal>("AveragePrice")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("datetime2(7)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(28,8)");

                    b.Property<long>("TradeCount")
                        .HasColumnType("bigint");

                    b.HasKey("Ticker");

                    b.ToTable("StockStats");
                });

            modelBuilder.Entity("Stocks.Domain.Entities.Trade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrokerId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Shares")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("TradeTimeUtc")
                        .HasColumnType("datetime2(7)");

                    b.HasKey("Id");

                    b.HasIndex("Ticker");

                    b.HasIndex("TradeTimeUtc");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("Stocks.Domain.Entities.BrokerStockInfo", b =>
                {
                    b.HasOne("Stocks.Domain.Entities.Broker", "Broker")
                        .WithMany("StockHoldings")
                        .HasForeignKey("BrokerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Broker");
                });

            modelBuilder.Entity("Stocks.Domain.Entities.Broker", b =>
                {
                    b.Navigation("StockHoldings");
                });
#pragma warning restore 612, 618
        }
    }
}
